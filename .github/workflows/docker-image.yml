name: Build and Push Multi-Arch Docker Images

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository_owner }}/sharelatex


jobs:
  build-and-push:
    name: Build and Push Images for ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: linux-amd64
            runner: ubuntu-24.04
          - platform: linux-arm64
            runner: ubuntu-24.04-arm

    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy .dockerignore
        run: cp ./server-ce/.dockerignore ../

      - name: Build and push sharelatex-base
        id: build-and-push-base
        uses: docker/build-push-action@v5
        env:
          IMAGE_PREFIX: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ./server-ce/Dockerfile-base
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          tags: |
            ${{ env.IMAGE_PREFIX }}:${{ matrix.platform }}-${{ github.ref_name }}-${{ github.sha }}
          cache-from: type=gha
      
      - name: Build and push sharelatex
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        env:
          IMAGE_PREFIX: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ./server-ce/Dockerfile
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            OVERLEAF_BASE_TAG=${{ env.IMAGE_PREFIX }}-base:${{ matrix.platform }}-${{ github.ref_name }}-${{ github.sha }}
            MONOREPO_REVISION=${{ github.sha }}
          tags: |
            ${{ env.IMAGE_PREFIX }}:${{ matrix.platform }}-${{ github.ref_name }}-${{ github.sha }}
          cache-from: type=gha

  create-manifest-and-sign:
    name: Create and Sign Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: build-and-push
    strategy:
      matrix:
        include:
          - imageprefix: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base
            tag: ${{ github.ref_name }}-${{ github.sha }}
          - imageprefix: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base
            tag: ${{ github.ref_name }}
          - imageprefix: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-base
            tag: latest
          - imageprefix: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tag: ${{ github.ref_name }}-${{ github.sha }}
          - imageprefix: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tag: ${{ github.ref_name }}
          - imageprefix: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            tag: latest
    permissions:
      packages: write
      contents: read
      #id-token: write  # Needed for Cosign keyless signing

    steps:
      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Create and push manifest list for ${{ matrix.imageprefix }}:${{ matrix.tag }}
        run: |
          docker manifest create ${{ matrix.imageprefix }}:${{ matrix.tag }} \
            ${{ matrix.imageprefix }}:linux-amd64-${{ github.ref_name }}-${{ github.sha }} \
            ${{ matrix.imageprefix }}:linux-arm64-${{ github.ref_name }}-${{ github.sha }}

          docker manifest push ${{ matrix.imageprefix }}:${{ matrix.tag }}

      - name: Sign multi-arch manifests
        run: |
          cosign sign --yes ${{ matrix.imageprefix }}:${{ matrix.tag }}

          
